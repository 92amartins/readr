// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// read_csv
List read_csv(std::string file, int n);
RcppExport SEXP fastread_read_csv(SEXP fileSEXP, SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        std::string file = Rcpp::as<std::string >(fileSEXP);
        int n = Rcpp::as<int >(nSEXP);
        List __result = read_csv(file, n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// read_csv2
List read_csv2(std::string file, int n);
RcppExport SEXP fastread_read_csv2(SEXP fileSEXP, SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        std::string file = Rcpp::as<std::string >(fileSEXP);
        int n = Rcpp::as<int >(nSEXP);
        List __result = read_csv2(file, n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// read_tokens
void read_tokens(std::string file, int n, int nc);
RcppExport SEXP fastread_read_tokens(SEXP fileSEXP, SEXP nSEXP, SEXP ncSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        std::string file = Rcpp::as<std::string >(fileSEXP);
        int n = Rcpp::as<int >(nSEXP);
        int nc = Rcpp::as<int >(ncSEXP);
        read_tokens(file, n, nc);
    }
    return R_NilValue;
END_RCPP
}
// skip_tokens
void skip_tokens(std::string file, int n, int nc);
RcppExport SEXP fastread_skip_tokens(SEXP fileSEXP, SEXP nSEXP, SEXP ncSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        std::string file = Rcpp::as<std::string >(fileSEXP);
        int n = Rcpp::as<int >(nSEXP);
        int nc = Rcpp::as<int >(ncSEXP);
        skip_tokens(file, n, nc);
    }
    return R_NilValue;
END_RCPP
}
// read_all_lines_ifstream
void read_all_lines_ifstream(std::string filename, int n);
RcppExport SEXP fastread_read_all_lines_ifstream(SEXP filenameSEXP, SEXP nSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        std::string filename = Rcpp::as<std::string >(filenameSEXP);
        int n = Rcpp::as<int >(nSEXP);
        read_all_lines_ifstream(filename, n);
    }
    return R_NilValue;
END_RCPP
}
// read_all_lines_FILE
void read_all_lines_FILE(std::string filename);
RcppExport SEXP fastread_read_all_lines_FILE(SEXP filenameSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        std::string filename = Rcpp::as<std::string >(filenameSEXP);
        read_all_lines_FILE(filename);
    }
    return R_NilValue;
END_RCPP
}
// scan_
SEXP scan_(std::string filename, int n, SEXP what);
RcppExport SEXP fastread_scan_(SEXP filenameSEXP, SEXP nSEXP, SEXP whatSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        std::string filename = Rcpp::as<std::string >(filenameSEXP);
        int n = Rcpp::as<int >(nSEXP);
        SEXP what = Rcpp::as<SEXP >(whatSEXP);
        SEXP __result = scan_(filename, n, what);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// play_mmap
List play_mmap(std::string filename, int n, int nc);
RcppExport SEXP fastread_play_mmap(SEXP filenameSEXP, SEXP nSEXP, SEXP ncSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        std::string filename = Rcpp::as<std::string >(filenameSEXP);
        int n = Rcpp::as<int >(nSEXP);
        int nc = Rcpp::as<int >(ncSEXP);
        List __result = play_mmap(filename, n, nc);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
