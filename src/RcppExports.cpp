// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/fastread.h"
#include <Rcpp.h>

using namespace Rcpp;

// read_csv
List read_csv(SEXP input, int n, CharacterVector classes);
RcppExport SEXP fastread_read_csv(SEXP inputSEXP, SEXP nSEXP, SEXP classesSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type input(inputSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type classes(classesSEXP );
        List __result = read_csv(input, n, classes);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// read_lines
CharacterVector read_lines(SEXP input, int n = 0);
RcppExport SEXP fastread_read_lines(SEXP inputSEXP, SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type input(inputSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        CharacterVector __result = read_lines(input, n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// count_lines
int count_lines(SEXP input);
RcppExport SEXP fastread_count_lines(SEXP inputSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type input(inputSEXP );
        int __result = count_lines(input);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// scan_text
SEXP scan_text(CharacterVector x, std::string what);
RcppExport SEXP fastread_scan_text(SEXP xSEXP, SEXP whatSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< std::string >::type what(whatSEXP );
        SEXP __result = scan_text(x, what);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// read_file
String read_file(const std::string& path);
RcppExport SEXP fastread_read_file(SEXP pathSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP );
        String __result = read_file(path);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
